require('dotenv').config();
const { Telegraf, Markup } = require('telegraf');
const sequelize = require('./db/config');
const User = require('./db/models/User');
const { Op } = require('sequelize');

// Initialize database
sequelize.sync().then(() => {
  console.log('Database synchronized');
}).catch(err => {
  console.error('Error syncing database:', err);
});

// –¢–£–¢ –≤—Å—Ç–∞–≤ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞!
const bot = new Telegraf(process.env.BOT_TOKEN);

// Middleware to track user activity
bot.use(async (ctx, next) => {
  try {
    const telegramId = ctx.from?.id.toString();
    if (telegramId) {
      const [user] = await User.findOrCreate({
        where: { telegramId },
        defaults: {
          username: ctx.from.username,
          status: 'new'
        }
      });
      
      // Update last activity
      await user.update({ lastActivity: new Date() });
      
      ctx.dbUser = user;
    }
  } catch (error) {
    console.error('Error in middleware:', error);
  }
  return next();
});

// /start –∫–æ–º–∞–Ω–¥–∞
bot.start(async (ctx) => {
  if (ctx.dbUser) {
    await ctx.dbUser.update({ status: 'new', currentBlock: 'START' });
  }
  
  ctx.reply(
    `–ü—Ä–∏–≤—ñ—Ç! –Ø –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–∏–π –∞—Å–∏—Å—Ç–µ–Ω—Ç. üëã

–†–æ–∑–ø–æ–≤—ñ–º —Ç–æ–±—ñ –æ—Å–Ω–æ–≤–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é —Ç–∞ –∑–∞–¥–∞–º –∫—ñ–ª—å–∫–∞ –∑–∞–ø–∏—Ç–∞–Ω—å. üôÇ

–Ø–∫—â–æ –≤—Å–µ –≤–ª–∞—à—Ç—É—î ‚Äî –Ω–∞–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ –¥–æ –ª—é–¥–∏–Ω–∏, —è–∫–∞ –¥–æ–ø–æ–º–æ–∂–µ –¥–∞–ª—ñ.
‚úÖ –ù–∞—Ç–∏—Å–Ω–∏ "–û–ö" ‚Äî —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏!

üòä –ê–±–æ —è–∫—â–æ —Ö–æ—á–µ—à —Å–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—ñ–¥–≥—É–∫–∏ ‚Äî —Ç–∏—Å–Ω–∏ "–í—ñ–¥–≥—É–∫–∏"`,
    Markup.inlineKeyboard([
      [Markup.button.callback('–û–ö', 'BLOCK2')],
      [Markup.button.callback('–í—ñ–¥–≥—É–∫–∏', 'REVIEWS')],
    ])
  );
});

// –í—ñ–¥–≥—É–∫–∏
bot.action('REVIEWS', async (ctx) => {
  await ctx.reply('–û—Å—å –∫—ñ–ª—å–∫–∞ –≤—ñ–¥–≥—É–∫—ñ–≤ –≤—ñ–¥ –Ω–∞—à–∏—Ö –ø—Ä–∞—Ü—ñ–≤–Ω–∏—Ü—å:');
  await ctx.replyWithPhoto({ source: './images/review1.png' });
  await ctx.replyWithPhoto({ source: './images/review2.png' });
  await ctx.replyWithPhoto({ source: './images/review3.png' });
});

// –ë–ª–æ–∫ 2
bot.action('BLOCK2', async (ctx) => {
  if (ctx.dbUser) {
    await ctx.dbUser.update({ 
      status: 'in_progress',
      currentBlock: 'BLOCK2'
    });
  }
  
  ctx.reply(
    `‚¨áÔ∏è –í—Å—å–æ–≥–æ –±—É–¥–µ 5 –ø—É–Ω–∫—Ç—ñ–≤: ‚¨áÔ∏è

1. –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ –ø—Ä–æ —Ä–æ–±–æ—Ç—É
2. –Ø–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —Ä–æ–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å
3. –ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏
4. –û–ø–ª–∞—Ç–∞
5. –©–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–ª—è –ø–æ—á–∞—Ç–∫—É

‚ùó –ù–∞—Ç–∏—Å–∫–∞–π –∫–Ω–æ–ø–∫—É –ø—ñ–¥ —Ç–µ–∫—Å—Ç–æ–º, —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ ‚ùó`,
    Markup.inlineKeyboard([
      [Markup.button.callback('–û–ö', 'BLOCK3')],
    ])
  );
});

// –ë–ª–æ–∫ 3
bot.action('BLOCK3', async (ctx) => {
  if (ctx.dbUser) {
    await ctx.dbUser.update({ 
      status: 'in_progress',
      currentBlock: 'BLOCK3'
    });
  }
  
  ctx.reply(
    `1Ô∏è‚É£ –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ –ø—Ä–æ —Ä–æ–±–æ—Ç—É 1Ô∏è‚É£
‚ùï–†–æ–±–æ—Ç–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç–∏–º–µ –Ω–∞ –±—Ä–∏—Ç–∞–Ω—Å—å–∫–æ–º—É —Å–∞–π—Ç—ñ –∑–Ω–∞–π–æ–º—Å—Ç–≤, –¥–µ –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ —ñ–Ω–æ–∑–µ–º–Ω—ñ —á–æ–ª–æ–≤—ñ–∫–∏ (–º–æ–∂–Ω–∞ –±–ª–æ–∫—É–≤–∞—Ç–∏ –∫—Ä–∞—ó–Ω–∏ –°–ù–î)‚ùï
–°–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –±—É–¥–µ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é –º–æ–≤–æ—é (—á–µ—Ä–µ–∑ –ø–µ—Ä–µ–∫–ª–∞–¥–∞—á).

–°—É—Ç—å —Ä–æ–±–æ—Ç–∏ –ø–æ–ª—è–≥–∞—î –≤ —Ç–æ–º—É, —â–æ –≤–∏ –∑–∞—Ö–æ–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç, –≤–º–∏–∫–∞—î—Ç–µ –∫–∞–º–µ—Ä—É, –æ–¥—Ä–∞–∑—É –≤–∏–º–∏–∫–∞—î—Ç–µ –º—ñ–∫—Ä–æ—Ñ–æ–Ω (–æ—Å–∫—ñ–ª—å–∫–∏ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –≤ –ø–∏—Å—å–º–æ–≤–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ) —ñ —á–µ–∫–∞—î—Ç–µ –¥–∑–≤—ñ–Ω–∫–∞ –≤—ñ–¥ —á–æ–ª–æ–≤—ñ–∫–∞.
–©–æ–± –≤–∞–º –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞–ª–∏, –Ω—ñ—á–æ–≥–æ —Ä–æ–±–∏—Ç–∏ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ.
–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ –≤–∞—Å –Ω—ñ—Ö—Ç–æ –ø–æ–±–∞—á–∏—Ç–∏ –Ω–µ –∑–º–æ–∂–µ ‚Äî –≥—Ä–æ—à—ñ –Ω–∞—Ä–∞—Ö–æ–≤—É—é—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ —Ç–æ–¥—ñ, –∫–æ–ª–∏ —á–æ–ª–æ–≤—ñ–∫ —Ç–µ–ª–µ—Ñ–æ–Ω—É—î –≤–∞–º.

–ù–∞–≤—á–∞—Ç–∏–º—É—Ç—å –≤–∞—Å —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ –ø—ñ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ñ –ª—é–¥–∏, –Ω–∞–≤—á–∞–Ω–Ω—è –∑–∞–π–º–∞—î –º–∞–∫—Å–∏–º—É–º 1 –≥–æ–¥–∏–Ω—É.
–î–∞–ª—ñ –≤—Å–µ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –≤–∞—à–æ—ó –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —Ç–∞ —Ñ–∞–Ω—Ç–∞–∑—ñ—ó –≤ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—ñ.
2 –≤–∏—Ö—ñ–¥–Ω–∏—Ö –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å.

‚ùï–í–∞–∂–ª–∏–≤–æ‚ùï –¶–µ Adult —Å–∞–π—Ç, –∞–ª–µ –≤—Å—ñ –¥—ñ–≤—á–∞—Ç–∞ –ø—Ä–∞—Ü—é—é—Ç—å —É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó non-adult ‚Äî –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ–∑ —ñ–Ω—Ç–∏–º—É, —ñ –∑–∞–≤–∂–¥–∏ –º–∞—é—Ç—å –ø–æ–≤–Ω–µ –ø—Ä–∞–≤–æ –≤—ñ–¥–º–æ–≤–∏—Ç–∏ —Å–ø—ñ–≤—Ä–æ–∑–º–æ–≤–Ω–∏–∫—É.`,
    Markup.inlineKeyboard([
      [Markup.button.callback('–ü—ñ–¥—Ö–æ–¥–∏—Ç—å! –ô–¥–µ–º–æ –¥–∞–ª—ñ', 'BLOCK4')],
      [Markup.button.callback('–ù–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å', 'NOT_MATCH')],
    ])
  );
});

// –ë–ª–æ–∫ 4
bot.action('BLOCK4', async (ctx) => {
  if (ctx.dbUser) {
    await ctx.dbUser.update({ 
      status: 'in_progress',
      currentBlock: 'BLOCK4'
    });
  }
  
  ctx.reply(
    `2Ô∏è‚É£ –Ø–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —Ä–æ–±–æ—Ç–∞ –Ω–∞ —Å–∞–π—Ç—ñ: 2Ô∏è‚É£
–¢–∏ –ø—Ä–æ—Å—Ç–æ –∑–∞—Ö–æ–¥–∏—à –Ω–∞ —Å–∞–π—Ç –∑–∞ –ª–æ–≥—ñ–Ω–æ–º —ñ –ø–∞—Ä–æ–ª–µ–º (—è–∫—ñ –Ω–∞–¥—ñ—à–ª–µ —Å—Ç—É–¥—ñ—è), –≤–º–∏–∫–∞—î—à –∫–∞–º–µ—Ä—É üé•, –≤–∏–º–∏–∫–∞—î—à –º—ñ–∫—Ä–æ—Ñ–æ–Ω ‚õîÔ∏è —ñ —á–µ–∫–∞—î—à –¥–∑–≤—ñ–Ω–∫–∞ –≤—ñ–¥ —á–æ–ª–æ–≤—ñ–∫–∞.

–ö–æ–ª–∏ –¥–∑–≤—ñ–Ω–∫–∞ –Ω–µ–º–∞—î ‚Äî –Ω–µ–º–∞—î –ø–æ—Ç—Ä–µ–±–∏ –≤–µ—Å—å —á–∞—Å —Å–∏–¥—ñ—Ç–∏ –ø–µ—Ä–µ–¥ –∫–∞–º–µ—Ä–æ—é (–≥–æ–ª–æ–≤–Ω–µ, –∫–æ–ª–∏ –¥–∑–≤–æ–Ω–∏—Ç—å —á–æ–ª–æ–≤—ñ–∫ ‚Äî —à–≤–∏–¥–∫–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –Ω–∞ –¥–∑–≤—ñ–Ω–æ–∫‚ùóÔ∏è).
–Ø–∫ —Ç—ñ–ª—å–∫–∏ —á–æ–ª–æ–≤—ñ–∫ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞–≤ ‚Äî –∑ –ø–µ—Ä—à–æ—ó —Ö–≤–∏–ª–∏–Ω–∏ —Ç–æ–±—ñ –ø–æ—á–∏–Ω–∞—é—Ç—å –Ω–∞—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏—Å—è –≥—Ä–æ—à—ñ.

–°—É—Ç—å —Ä–æ–±–æ—Ç–∏ ‚Äî –∑–∞—Ç—Ä–∏–º–∞—Ç–∏ —á–æ–ª–æ–≤—ñ–∫–∞ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è–º (–º–æ–∂–Ω–∞ –Ω–µ –ª–∏—à–µ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è–º, —É—Å–µ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —Ç–≤–æ–≥–æ –±–∞–∂–∞–Ω–Ω—è), —â–æ–± –≤—ñ–Ω –≤–∏—Ç—Ä–∞—á–∞–≤ —è–∫–Ω–∞–π–±—ñ–ª—å—à–µ –≥—Ä–æ—à–µ–π –Ω–∞ —Ç–µ–±–µ.`,
    Markup.inlineKeyboard([
      [Markup.button.callback('–ü—ñ–¥—Ö–æ–¥–∏—Ç—å! –ô–¥–µ–º–æ –¥–∞–ª—ñ', 'BLOCK5')],
      [Markup.button.callback('–ù–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å', 'NOT_MATCH')],
    ])
  );
});

// –ë–ª–æ–∫ 5
bot.action('BLOCK5', async (ctx) => {
  if (ctx.dbUser) {
    await ctx.dbUser.update({ 
      status: 'in_progress',
      currentBlock: 'BLOCK5'
    });
  }
  
  ctx.reply(
    `3Ô∏è‚É£ –ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏ 3Ô∏è‚É£

‚è∞ –í—ñ–¥ 5-6 –≥–æ–¥–∏–Ω –Ω–∞ –¥–æ–±—É —É –±—É–¥—å-—è–∫–∏–π –∑—Ä—É—á–Ω–∏–π —á–∞—Å.`,
    Markup.inlineKeyboard([
      [Markup.button.callback('–ü—ñ–¥—Ö–æ–¥–∏—Ç—å! –ô–¥–µ–º–æ –¥–∞–ª—ñ', 'BLOCK6')],
      [Markup.button.callback('–ù–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å', 'NOT_MATCH')],
    ])
  );
});

// –ë–ª–æ–∫ 6 (–ù–û–í–ò–ô! –û–ø–ª–∞—Ç–∞)
bot.action('BLOCK6', async (ctx) => {
  if (ctx.dbUser) {
    await ctx.dbUser.update({ 
      status: 'in_progress',
      currentBlock: 'BLOCK6'
    });
  }
  
  ctx.reply(
    `4Ô∏è‚É£ –û–ø–ª–∞—Ç–∞ 4Ô∏è‚É£

‚ùóÔ∏è–ó–∞—Ä–ø–ª–∞—Ç–∞ –≤–∏–ø–ª–∞—á—É—î—Ç—å—Å—è –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ñ, –∞ –¥–∞–ª—ñ —Ç–∏ –∑–º–æ–∂–µ—à –≤–∏–≤–µ—Å—Ç–∏ —ó—ó –Ω–∞ –±—É–¥—å-—è–∫—É –∫–∞—Ä—Ç–∫—É –∞–±–æ –ø–ª–∞—Ç—ñ–∂–Ω—É —Å–∏—Å—Ç–µ–º—É (—Ü—å–æ–º—É –Ω–∞–≤—á–∞—é—Ç—å), –∫–æ–∂–Ω—ñ 2 —Ç–∏–∂–Ω—ñ.

üíµ –¥–æ 600 –¥–æ–ª–∞—Ä—ñ–≤ ‚Äî 80% (+ –∫–æ–º—ñ—Å—ñ—è —Å–∞–π—Ç—É 15%)  
üíµ –≤—ñ–¥ 600 –¥–æ 1000 –¥–æ–ª–∞—Ä—ñ–≤ ‚Äî 85% (+ –∫–æ–º—ñ—Å—ñ—è —Å–∞–π—Ç—É 15%)  
üíµ –ø–æ–Ω–∞–¥ 1000 –¥–æ–ª–∞—Ä—ñ–≤ ‚Äî 90% (+ –∫–æ–º—ñ—Å—ñ—è —Å–∞–π—Ç—É 15%)

–ó–∞—Ä–ø–ª–∞—Ç–∞ –¥—ñ–≤—á–∞—Ç –∑–∞ 2 —Ç–∏–∂–Ω—ñ –º—ñ–Ω—ñ–º—É–º 400‚Äì500$, –±–∞–≥–∞—Ç–æ —Ö—Ç–æ –∑–∞—Ä–æ–±–ª—è—î 1000‚Äì2000$.

–¢–∏ —Ç–∞–∫–æ–∂ –∑–º–æ–∂–µ—à –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ —Å–≤—ñ–π –±–∞–ª–∞–Ω—Å –Ω–∞ —Å–∞–π—Ç—ñ (—É –¥–æ–ª–∞—Ä–∞—Ö) —ñ —Ä–∞—Ö—É–≤–∞—Ç–∏ —á–∏—Å—Ç–∏–π –ø—Ä–∏–±—É—Ç–æ–∫.`,
    Markup.inlineKeyboard([
      [Markup.button.callback('–ü—ñ–¥—Ö–æ–¥–∏—Ç—å! –ô–¥–µ–º–æ –¥–∞–ª—ñ', 'BLOCK7')],
      [Markup.button.callback('–ù–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å', 'NOT_MATCH')],
    ])
  );
});

// –ë–ª–æ–∫ 7 (–©–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–ª—è —Å—Ç–∞—Ä—Ç—É)
bot.action('BLOCK7', async (ctx) => {
  if (ctx.dbUser) {
    await ctx.dbUser.update({ 
      status: 'in_progress',
      currentBlock: 'BLOCK7'
    });
  }
  
  ctx.reply(
    `5Ô∏è‚É£ –©–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–ª—è –ø–æ—á–∞—Ç–∫—É? 5Ô∏è‚É£

‚úÖ –ù–æ—É—Ç–±—É–∫ —ñ —Ö–æ—Ä–æ—à–∏–π —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç  
‚úÖ ID –∫–∞—Ä—Ç–∞ / –ø–∞—Å–ø–æ—Ä—Ç / –∑–∞–∫–æ—Ä–¥–æ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç / –≤–æ–¥—ñ–π—Å—å–∫—ñ –ø—Ä–∞–≤–∞  
‚ùå –£–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –ø–∞—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ä–æ–≥–æ –∑—Ä–∞–∑–∫–∞ ‚Äî –Ω–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å

‚Äì‚Äì –ü–æ—Ç—Ä—ñ–±–Ω–∞ –±—É–¥–µ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤—ñ–∫—É (18+) ‚Äì‚Äì`,
    Markup.inlineKeyboard([
      [Markup.button.callback('–£ –º–µ–Ω–µ –≤—Å–µ —î! –ô–¥–µ–º–æ –¥–∞–ª—ñ', 'BLOCK8')],
      [Markup.button.callback('–£ –º–µ–Ω–µ –Ω–µ–º–∞—î –Ω–æ—É—Ç–±—É–∫–∞, –∞–ª–µ —Ö–æ—á—É –ø—Ä–∞—Ü—é–≤–∞—Ç–∏!', 'BLOCK81')],
    ])
  );
});

// –ë–ª–æ–∫ 8 - –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ 18+
bot.action('BLOCK8', async (ctx) => {
  if (ctx.dbUser) {
    await ctx.dbUser.update({ 
      status: 'in_progress',
      currentBlock: 'BLOCK8'
    });
  }
  
  ctx.reply(
    `‚ö†Ô∏è –û–ë–û–í'–Ø–ó–ö–û–í–û! –Ø–∫—â–æ —Ç–æ–±—ñ –º–µ–Ω—à–µ 18 —Ä–æ–∫—ñ–≤ —ñ –¥—É–º–∞—î—à –æ–±—ñ–π—Ç–∏ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—é ‚Äî —Ü–µ –ù–ï–ú–û–ñ–õ–ò–í–û. –ü—ñ–¥—Ä–æ–±–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –∫–∞—Ä–∞—î—Ç—å—Å—è –∑–∞–∫–æ–Ω–æ–º.

–Ø–∫—â–æ –±—ñ–ª—å—à–µ 18 ‚Äî –Ω–∞—Ç–∏—Å–∫–∞–π "–î–∞–ª—ñ".`,
    Markup.inlineKeyboard([
      [Markup.button.callback('–î–∞–ª—ñ', 'BLOCK9')],
    ])
  );
});

// –ë–ª–æ–∫ 9 - —Ñ—ñ–Ω–∞–ª —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é
bot.action('BLOCK9', async (ctx) => {
  if (ctx.dbUser) {
    await ctx.dbUser.update({ 
      status: 'pending_dm',
      currentBlock: 'BLOCK9'
    });
  }
  
  ctx.reply(
    `üéâ –°—É–ø–µ—Ä! –ù–∞–ø–∏—à–∏ "–Ø –ø—Ä–æ–π—à–ª–∞" —É —Ü–µ–π –∞–∫–∞—É–Ω—Ç üëâ @angelic578 —ñ –≤–æ–Ω–∞ –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ –∑ —É—Å—ñ–º —ñ–Ω—à–∏–º!`
  );
});

// –ë–ª–æ–∫ 8.1 - —Ñ—ñ–Ω–∞–ª –¥–ª—è —Ç–∏—Ö –±–µ–∑ –Ω–æ—É—Ç–±—É–∫–∞
bot.action('BLOCK81', (ctx) => {
  ctx.reply(
    `üéâ –°—É–ø–µ—Ä! –ù–∞–ø–∏—à–∏ "–Ø –ø—Ä–æ—á–∏—Ç–∞–ª–∞" —É —Ü–µ–π –∞–∫–∞—É–Ω—Ç üëâ @angelic578 —ñ –≤–æ–Ω–∞ –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ –∑ —É—Å—ñ–º —ñ–Ω—à–∏–º!`
  );
});

// –û–±—Ä–æ–±–∫–∞ "–ù–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å"
bot.action('NOT_MATCH', (ctx) => {
  ctx.reply(
    `–ù–∞ –∂–∞–ª—å, —Å–ø—ñ–≤–ø—Ä–∞—Ü—è –Ω–µ–º–æ–∂–ª–∏–≤–∞ –≤ —Ç–∞–∫–æ–º—É –≤–∏–ø–∞–¥–∫—É üòî  
–î—è–∫—É—î–º–æ –∑–∞ —Ç–≤—ñ–π —á–∞—Å —ñ –±–∞–∂–∞—î–º–æ –≥–∞—Ä–Ω–æ–≥–æ –¥–Ω—è!`
  );
});

// Helper function to get sales funnel statistics
async function getSalesStats() {
  const stats = await User.findAll({
    attributes: ['status', [sequelize.fn('COUNT', '*'), 'count']],
    group: ['status']
  });
  
  const pendingFollowUp = await User.findAll({
    where: {
      status: 'pending_dm',
      lastActivity: {
        [Op.lt]: new Date(Date.now() - 24 * 60 * 60 * 1000) // More than 24 hours ago
      }
    }
  });
  
  return { stats, pendingFollowUp };
}

// Admin command to check statistics
bot.command('stats', async (ctx) => {
  const { stats, pendingFollowUp } = await getSalesStats();
  
  let message = 'üìä Sales Funnel Statistics:\n\n';
  for (const stat of stats) {
    const data = stat.get({ plain: true });
    message += `${data.status}: ${data.count}\n`;
    // Fetch users for this status
    const users = await User.findAll({ where: { status: data.status } });
    if (users.length > 0) {
      const handles = users.map(u => u.username ? `@${u.username}` : `[id:${u.telegramId}]`).join(', ');
      message += `Handles: ${handles}\n`;
    }
  }
  
  message += `\nüîî Users pending follow-up (>24h): ${pendingFollowUp.length}`;
  if (pendingFollowUp.length > 0) {
    const handles = pendingFollowUp.map(u => u.username ? `@${u.username}` : `[id:${u.telegramId}]`).join(', ');
    message += `\nPending DM handles: ${handles}`;
  }
  
  ctx.reply(message);
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch();
console.log('–ë–æ—Ç –ø—Ä–∞—Ü—é—î!');

// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));
